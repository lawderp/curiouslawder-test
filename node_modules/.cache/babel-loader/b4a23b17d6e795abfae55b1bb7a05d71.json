{"ast":null,"code":"var _jsxFileName = \"/Users/lawder/Documents/Sites/curious-lawder/src/Search.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactiveBase, DataSearch } from '@appbaseio/reactivesearch';\n\nvar Search = function Search(props) {\n  return React.createElement(\"div\", {\n    className: \"searchDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(ReactiveBase // app=\"MovieAppFinal\"\n  , {\n    app: \"agent-reviews-lawder-2\" // credentials=\"RxIAbH9Jc:6d3a5016-5e9d-448f-bd2b-63c80b401484\"\n    ,\n    credentials: \"RX8tr5U1J:b020bb52-c479-42f5-840c-0e592c9776b5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(DataSearch, {\n    className: \"search-bar\",\n    componentId: \"mainSearch\",\n    dataField: [\"Name\"],\n    queryFormat: \"and\",\n    placeholder: \"Search for your agent\",\n    onSuggestion: function onSuggestion(suggestion) {\n      return {\n        label: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, suggestion._source.Name),\n        value: suggestion._source.Name,\n        source: suggestion._source // for onValueSelected to work with onSuggestion\n\n      };\n    },\n    onValueSelected: function onValueSelected(value, cause, source) {\n      return props.setCall(value, cause, source);\n    },\n    downShiftProps: {\n      defaultIsOpen: true,\n      initialIsOpen: true,\n      defaultHighlightedIndex: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })));\n};\n\nSearch.propTypes = {\n  setCall: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/lawder/Documents/Sites/curious-lawder/src/Search.js"],"names":["React","PropTypes","ReactiveBase","DataSearch","Search","props","suggestion","label","_source","Name","value","source","cause","setCall","defaultIsOpen","initialIsOpen","defaultHighlightedIndex","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,2BAAvC;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAClB;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD,CACE;AADF;AAEE,IAAA,GAAG,EAAC,wBAFN,CAGE;AAHF;AAIE,IAAA,WAAW,EAAC,gDAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,UAAD;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,WAAW,EAAC,YAFd;AAGE,IAAA,SAAS,EAAE,CAAC,MAAD,CAHb;AAIE,IAAA,WAAW,EAAC,KAJd;AAKE,IAAA,WAAW,EAAC,uBALd;AAME,IAAA,YAAY,EAAE,sBAACC,UAAD;AAAA,aACZ;AACEC,QAAAA,KAAK,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMD,UAAU,CAACE,OAAX,CAAmBC,IAAzB,CADV;AAEEC,QAAAA,KAAK,EAAEJ,UAAU,CAACE,OAAX,CAAmBC,IAF5B;AAGEE,QAAAA,MAAM,EAAEL,UAAU,CAACE,OAHrB,CAG8B;;AAH9B,OADY;AAAA,KANhB;AAaE,IAAA,eAAe,EACb,yBAACE,KAAD,EAAQE,KAAR,EAAeD,MAAf;AAAA,aAA0BN,KAAK,CAACQ,OAAN,CAAcH,KAAd,EAAqBE,KAArB,EAA4BD,MAA5B,CAA1B;AAAA,KAdJ;AAgBE,IAAA,cAAc,EACZ;AACEG,MAAAA,aAAa,EAAE,IADjB;AAEEC,MAAAA,aAAa,EAAE,IAFjB;AAGEC,MAAAA,uBAAuB,EAAE;AAH3B,KAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADkB;AAAA,CAApB;;AAoCEZ,MAAM,CAACa,SAAP,GAAmB;AACjBJ,EAAAA,OAAO,EAAEZ,SAAS,CAACiB,IAAV,CAAeC;AADP,CAAnB;AAKF,eAAef,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {ReactiveBase, DataSearch} from '@appbaseio/reactivesearch';\n\n\nconst Search = props => \n  <div className=\"searchDiv\">\n    <ReactiveBase\n      // app=\"MovieAppFinal\"\n      app=\"agent-reviews-lawder-2\"\n      // credentials=\"RxIAbH9Jc:6d3a5016-5e9d-448f-bd2b-63c80b401484\"\n      credentials=\"RX8tr5U1J:b020bb52-c479-42f5-840c-0e592c9776b5\"\n    >\n      <DataSearch     \n        className=\"search-bar\"                   \n        componentId=\"mainSearch\"            \n        dataField={[\"Name\"]}                      \n        queryFormat=\"and\"            \n        placeholder=\"Search for your agent\" \n        onSuggestion={(suggestion) => (\n          {\n            label: (<div>{suggestion._source.Name}</div>),\n            value: suggestion._source.Name,\n            source: suggestion._source  // for onValueSelected to work with onSuggestion\n          })\n        }\n        onValueSelected={\n          (value, cause, source) => props.setCall(value, cause, source)\n        }\n        downShiftProps={\n          {\n            defaultIsOpen: true,\n            initialIsOpen: true,\n            defaultHighlightedIndex: 0\n          }\n        }\n      />\n    </ReactiveBase>\n  </div>;\n\n  \n  Search.propTypes = {\n    setCall: PropTypes.func.isRequired,\n  }\n\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}